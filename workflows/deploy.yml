name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发
  schedule:
    # 每5分钟自动更新一次数据（可选）
    - cron: '*/5 * * * *'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Fetch data from Gist
      env:
        GIST_ID: ${{ secrets.GIST_ID }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        # 从Gist获取数据
        curl -H "Authorization: token $GH_TOKEN" \
             -H "Accept: application/vnd.github.v3+json" \
             https://api.github.com/gists/$GIST_ID > gist_data.json
        
        # 提取并处理数据
        node -e "
        const fs = require('fs');
        const gist = JSON.parse(fs.readFileSync('gist_data.json', 'utf8'));
        const filename = Object.keys(gist.files)[0];
        const messages = JSON.parse(gist.files[filename].content);
        
        // 生成前端数据文件
        const frontendData = {
          lastUpdated: new Date().toISOString(),
          messages: messages.slice(0, 50) // 只取最近50条
        };
        
        fs.writeFileSync('data.json', JSON.stringify(frontendData, null, 2));
        console.log('已获取 ' + messages.length + ' 条数据');
        "
        
    - name: Create HTML page
      run: |
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-CN">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ESP32数据监控面板</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    max-width: 900px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f5f5f5;
                }
                .header {
                    background: white;
                    padding: 20px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    margin-bottom: 20px;
                }
                .message-card {
                    background: white;
                    padding: 15px;
                    margin: 10px 0;
                    border-radius: 8px;
                    box-shadow: 0 1px 5px rgba(0,0,0,0.1);
                    border-left: 4px solid #007bff;
                }
                .timestamp {
                    color: #666;
                    font-size: 0.9em;
                    margin-bottom: 8px;
                }
                .data-item {
                    margin: 5px 0;
                    font-family: 'Courier New', monospace;
                }
                .refresh-btn {
                    padding: 10px 20px;
                    background-color: #28a745;
                    color: white;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 16px;
                }
                .stats {
                    display: flex;
                    gap: 20px;
                    margin: 15px 0;
                }
                .stat-item {
                    background: #e9ecef;
                    padding: 10px 15px;
                    border-radius: 5px;
                    font-size: 0.9em;
                }
                .last-updated {
                    color: #6c757d;
                    font-size: 0.8em;
                    margin-top: 10px;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>📡 ESP32数据监控面板</h1>
                <div class="stats">
                    <div class="stat-item">总数据量: <span id="totalCount">0</span> 条</div>
                    <div class="stat-item">最新数据: <span id="latestTime">-</span></div>
                </div>
                <button class="refresh-btn" onclick="location.reload()">🔄 刷新页面</button>
                <div class="last-updated">最后更新: <span id="lastUpdated">-</span></div>
            </div>
            <div id="messages-container"></div>

            <script>
                // 加载数据
                fetch('./data.json')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('lastUpdated').textContent = 
                            new Date(data.lastUpdated).toLocaleString();
                        document.getElementById('totalCount').textContent = data.messages.length;
                        
                        if (data.messages.length > 0) {
                            document.getElementById('latestTime').textContent = 
                                data.messages[0].timestamp;
                        }
                        
                        displayMessages(data.messages);
                    })
                    .catch(error => {
                        console.error('加载数据失败:', error);
                        document.getElementById('messages-container').innerHTML = 
                            '<div style="color: red; padding: 20px; text-align: center;">加载数据失败</div>';
                    });

                function displayMessages(messages) {
                    const container = document.getElementById('messages-container');
                    
                    if (messages.length === 0) {
                        container.innerHTML = '<div style="text-align: center; padding: 40px; color: #666;">暂无数据</div>';
                        return;
                    }
                    
                    container.innerHTML = messages.map(msg => `
                        <div class="message-card">
                            <div class="timestamp">📅 ${msg.timestamp}</div>
                            <div class="data-content">
                                ${formatData(msg.data)}
                            </div>
                        </div>
                    `).join('');
                }

                function formatData(data) {
                    let html = '';
                    for (const [key, value] of Object.entries(data)) {
                        html += `<div class="data-item"><strong>${key}:</strong> ${value}</div>`;
                    }
                    return html;
                }

                // 每2分钟自动刷新页面
                setInterval(() => {
                    location.reload();
                }, 120000);
            </script>
        </body>
        </html>
        EOF
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
